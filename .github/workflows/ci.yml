name: ci

on: [push, pull_request]

jobs:

  pre-commit:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: pre-commit/action@v2.0.0

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        backend: ['django']

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_${{ matrix.backend }}
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[testing,auth]
        reentry scan -r aiida

    - name: Run test suite
      env:
        AIIDA_TEST_BACKEND: ${{ matrix.backend }}
        # show timings of tests
        PYTEST_ADDOPTS: "--durations=0"
      run: pytest --cov aiida_restapi --cov-report=xml

    - name: Upload to Codecov
      uses: codecov/codecov-action@v1
      with:
        name: pytests
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true
