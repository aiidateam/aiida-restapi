[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-restapi'
dynamic = ['description', 'version']
authors = [
    {name = 'The AiiDA Team', email = 'developers@aiida.net'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 3 - Alpha',
    'Framework :: AiiDA',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Scientific/Engineering'
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.7'
dependencies = [
    'psycopg2-binary~=2.8.3',
    'aiida-core>=1.6,<2.0.0',
    'sqlalchemy<1.4',
    'fastapi~=0.65.1',
    'uvicorn[standard]>=0.12.0,<0.14.0',
    'pydantic~=1.8.2',
    'graphene~=2.0',
    'python-dateutil~=2.0',
    'lark~=0.11.0',
    'importlib_metadata~=4.3',
]

[project.urls]
Source = 'https://github.com/aiidateam/aiida-restapi'

[project.optional-dependencies]
auth = [
    'python-jose',
    'python-multipart',
    'passlib',
]
docs = [
    'sphinx',
    'myst-parser[linkify]>=0.13.7',
    'sphinx-external-toc',
    'sphinx-book-theme',
    'sphinx-panels',
    'pygments-graphql',
]
pre-commit = [
    'pre-commit~=2.12'
]
testing = [
    'pgtest~=1.3.1',
    'wheel~=0.31',
    'coverage',
    'pytest~=3.6,<5.0.0',
    'pytest-regressions',
    'pytest-cov',
    'requests',
]

[project.entry-points.'aiida.cmdline.data']
'restapi' = 'aiida_restapi.cli:data_cli'

[project.entry-points.'aiida.rest.post']
'data.str.Str.|' = 'aiida_restapi.models:Node_Post'
'data.float.Float.|' = 'aiida_restapi.models:Node_Post'
'data.int.Int.|' = 'aiida_restapi.models:Node_Post'
'data.bool.Bool.|' = 'aiida_restapi.models:Node_Post'
'data.structure.StructureData.|' = 'aiida_restapi.models:Node_Post'
'data.orbital.OrbitalData.|' = 'aiida_restapi.models:Node_Post'
'data.list.List.|'  = 'aiida_restapi.models:Node_Post'
'data.dict.Dict.|' = 'aiida_restapi.models:Node_Post'
'data.singlefile.SingleFileData.|' = 'aiida_restapi.models:Node_Post'
'data.code.Code.|' = 'aiida_restapi.models:Node_Post'

[tool.flit.module]
name = 'aiida_restapi'

[tool.flit.sdist]
exclude = [
    '.github/',
    'docs/',
    'tests/',
    '.coveragerc',
    '.gitignore',
    '.pre-commit-config.yaml',
    '.readthedocs.yml',
    'codecov.yml',
    'conftest.py',
    'mypy.ini',
    'tox.ini',
]

[tool.isort]
profile = 'black'

[tool.pylint.master]
extension-pkg-whitelist = ['pydantic']

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    'duplicate-code',
    'fixme',
    'invalid-name',
    'too-many-ancestors',
]

[tool.pylint.similarities]
ignore-imports = 'yes'

[tool.pytest.ini_options]
python_files = 'test_*.py example_*.py'
filterwarnings = [
    'ignore::DeprecationWarning:aiida:',
    'ignore::DeprecationWarning:plumpy:',
    'ignore::DeprecationWarning:django:',
    'ignore::DeprecationWarning:yaml:',
]
